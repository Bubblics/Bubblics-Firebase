/* Site Style */
/**
 * Allows you to use retina images at various pixel densities.
 * Examples:
 *
 *   @include retina(/images/mypic.jpg, 2);
 *   @include retina(/images/mypic.jpg, 3, 100px 100px, left top no-repeat transparent);
 *
 * @param  {Value}  $path               The path to the file name minus extension.
 * @param  {Number} $cap:    2          The highest pixel density level images exist for.
 * @param  {Value}  $size:   auto auto  The intended width of the rendered image.
 * @param  {Value}  $extras: null       Any other `background` values to be added.
 */
header {
  display: block;
  width: 100%;
  width: 100vw;
}

#background {
  position: absolute;
  background-repeat: no-repeat;
  background-position: top;
  z-index: -1;
  width: 100%;
}

#heart {
  position: absolute;
  display: none;
}

#sohooot {
  position: absolute;
  display: none;
}

#yesiam {
  position: absolute;
  display: none;
}

#bubblics {
  position: relative;
  height: 4000px;
}

.bubblics {
  position: absolute;
  margin-left: -462px;
  bottom: 0vh;
  left: 50vw;
  padding: 0px;
}

#mockup {
  width: 515px;
  height: 503px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/mockup.png") no-repeat;
  background-size: 515px 503px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #mockup {
    background: url("/assets/images/mockup@2x.png") no-repeat;
    background-size: 515px 503px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #mockup {
    background: url("/assets/images/mockup@2x.png") no-repeat;
    background-size: 515px 503px;
  }
}

@media (max-width: 893px) {
  #mockup {
    display: none;
  }
}

#logo-block {
  width: 310px;
  display: inline-block;
  vertical-align: bottom;
  margin-left: 50px;
  margin-bottom: 43px;
}

#logo {
  width: 200px;
  height: 47px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/weblogo.png") no-repeat;
  background-size: 200px 47px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #logo {
    background: url("/assets/images/weblogo@2x.png") no-repeat;
    background-size: 200px 47px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #logo {
    background: url("/assets/images/weblogo@2x.png") no-repeat;
    background-size: 200px 47px;
  }
}

#description {
  text-align: left;
  padding-top: 25px;
  padding-bottom: 25px;
}

#store-block {
  padding-left: 0px;
  margin-left: 0px;
}

#app-store {
  cursor: pointer;
  display: inline-block;
  width: 132px;
  height: 40px;
  margin-right: 15px;
  margin-left: -2px;
  margin-top: -2px;
  margin-bottom: -2px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/appbutton_appstore_soon_s.png") no-repeat;
  background-size: 132px 40px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #app-store {
    background: url("/assets/images/appbutton_appstore_soon_s@2x.png") no-repeat;
    background-size: 132px 40px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #app-store {
    background: url("/assets/images/appbutton_appstore_soon_s@2x.png") no-repeat;
    background-size: 132px 40px;
  }
}

#play-store {
  cursor: pointer;
  display: inline-block;
  width: 132px;
  height: 40px;
  margin: -2px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/appbutton_googleplay.png") no-repeat;
  background-size: 132px 40px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #play-store {
    background: url("/assets/images/appbutton_googleplay@2x.png") no-repeat;
    background-size: 132px 40px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #play-store {
    background: url("/assets/images/appbutton_googleplay@2x.png") no-repeat;
    background-size: 132px 40px;
  }
}

@media (max-width: 893px) {
  .bubblics {
    width: 100%;
    margin: auto;
    bottom: 0;
    left: 0;
  }
  #logo-block {
    display: block;
    margin: auto;
    vertical-align: bottom;
  }
  #logo {
    display: block;
    margin: auto;
  }
  #description {
    text-align: center;
  }
  #store-block {
    padding-right: 0px;
  }
  #app-store {
    margin-left: 15px;
  }
}

#pickupline-text {
  padding-top: 80px;
  padding-bottom: 37px;
}

@media (max-width: 767px) {
  #pickupline-text {
    padding-top: 38px;
    padding-bottom: 23px;
  }
}

#screenshots {
  width: 986px;
  margin-bottom: 70px;
}

@media (max-width: 985px) {
  #screenshots {
    width: 310px;
    margin-bottom: 25px;
  }
}

.howitworks {
  width: 275px;
  height: 485px;
  border-image-width: 0;
  margin-left: 18px;
  margin-right: 18px;
}

#howitworks1 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/mockup_howitworks1.png") no-repeat;
  background-size: 275px 485px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #howitworks1 {
    background: url("/assets/images/mockup_howitworks1@2x.png") no-repeat;
    background-size: 275px 485px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #howitworks1 {
    background: url("/assets/images/mockup_howitworks1@2x.png") no-repeat;
    background-size: 275px 485px;
  }
}

#howitworks2 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/mockup_howitworks2.png") no-repeat;
  background-size: 275px 485px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #howitworks2 {
    background: url("/assets/images/mockup_howitworks2@2x.png") no-repeat;
    background-size: 275px 485px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #howitworks2 {
    background: url("/assets/images/mockup_howitworks2@2x.png") no-repeat;
    background-size: 275px 485px;
  }
}

#howitworks3 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/mockup_howitworks3.png") no-repeat;
  background-size: 275px 485px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #howitworks3 {
    background: url("/assets/images/mockup_howitworks3@2x.png") no-repeat;
    background-size: 275px 485px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #howitworks3 {
    background: url("/assets/images/mockup_howitworks3@2x.png") no-repeat;
    background-size: 275px 485px;
  }
}

#features {
  background-color: #f15f26;
  padding-top: 70px;
  padding-bottom: 70px;
}

#emoji {
  width: 221px;
  height: 80px;
  margin-bottom: 30px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/function_emoji.png") no-repeat;
  background-size: 221px 80px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #emoji {
    background: url("/assets/images/function_emoji@2x.png") no-repeat;
    background-size: 221px 80px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #emoji {
    background: url("/assets/images/function_emoji@2x.png") no-repeat;
    background-size: 221px 80px;
  }
}

#emoji-text {
  max-width: 470px;
  color: #ffffff;
}

#mainmenu {
  width: 221px;
  height: 119px;
  margin-top: 60px;
  margin-bottom: 30px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/function_mainmenu.png") no-repeat;
  background-size: 221px 119px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #mainmenu {
    background: url("/assets/images/function_mainmenu@2x.png") no-repeat;
    background-size: 221px 119px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #mainmenu {
    background: url("/assets/images/function_mainmenu@2x.png") no-repeat;
    background-size: 221px 119px;
  }
}

#mainmenu-text {
  max-width: 470px;
  color: #ffffff;
}

@media (max-width: 767px) {
  #features {
    padding-top: 45px;
    padding-bottom: 45px;
  }
  #mainmenu {
    margin-bottom: 20px;
  }
  #emoji {
    margin-top: 45px;
    margin-bottom: 20px;
  }
}

#instagram {
  padding-top: 70px;
  padding-bottom: 70px;
}

#hashtag {
  width: 86.5px;
  height: 30.5px;
  margin-bottom: 30px;
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/oninstagram.png") no-repeat;
  background-size: 86.5px 30.5px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #hashtag {
    background: url("/assets/images/oninstagram@2x.png") no-repeat;
    background-size: 86.5px 30.5px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #hashtag {
    background: url("/assets/images/oninstagram@2x.png") no-repeat;
    background-size: 86.5px 30.5px;
  }
}

#samples {
  width: 908px;
}

@media (max-width: 907px) {
  #samples {
    width: 614px;
  }
}

@media (max-width: 613px) {
  #samples {
    width: 320px;
  }
}

.samples {
  width: 260px;
  height: 260px;
  margin: 15px;
}

#instapic01 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/instapic01.png") no-repeat;
  background-size: 260px 260px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #instapic01 {
    background: url("/assets/images/instapic01@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #instapic01 {
    background: url("/assets/images/instapic01@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

#instapic02 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/instapic02.png") no-repeat;
  background-size: 260px 260px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #instapic02 {
    background: url("/assets/images/instapic02@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #instapic02 {
    background: url("/assets/images/instapic02@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

#instapic03 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/instapic03.png") no-repeat;
  background-size: 260px 260px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #instapic03 {
    background: url("/assets/images/instapic03@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #instapic03 {
    background: url("/assets/images/instapic03@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

#instapic04 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/instapic04.png") no-repeat;
  background-size: 260px 260px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #instapic04 {
    background: url("/assets/images/instapic04@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #instapic04 {
    background: url("/assets/images/instapic04@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

#instapic05 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/instapic05.png") no-repeat;
  background-size: 260px 260px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #instapic05 {
    background: url("/assets/images/instapic05@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #instapic05 {
    background: url("/assets/images/instapic05@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

#instapic06 {
  /*
   * Set a counter and get the length of the image path.
   */
  /*
   * Loop ver the image path and figure out the
   * position of the dot where the extension begins.
   */
  /*
   * If we were able to figure out where the extension is,
   * slice the path into a base and an extension. Use that to
   * calculate urls for different density environments. Set
   * values for different environments.
   */
  /*
     * Set a base background for 1x environments.
     */
  background: url("/assets/images/instapic06.png") no-repeat;
  background-size: 260px 260px;
  /*
     * Create an @2x-ish media query.
     */
  /*
     * Create media queries for all environments that the user has
     * provided images for.
     */
  /*
   * If anything went wrong trying to separate the file from its
   * extension, set a background value without doing anything to it.
   */
}

@media all and (-webkit-min-device-pixel-ratio: 1.5), all and (-o-min-device-pixel-ratio: 3 / 2), all and (min--moz-device-pixel-ratio: 1.5), all and (min-device-pixel-ratio: 1.5) {
  #instapic06 {
    background: url("/assets/images/instapic06@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  #instapic06 {
    background: url("/assets/images/instapic06@2x.png") no-repeat;
    background-size: 260px 260px;
  }
}

#mixpanel {
  margin-bottom: 20px;
}
